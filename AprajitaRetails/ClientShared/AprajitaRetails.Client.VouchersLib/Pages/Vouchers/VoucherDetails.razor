@page "/Vouchers/Detail/{*ID}"

@using AprajitaRetails.Shared.Models.Vouchers
@using AprajitaRetails.Shared.Models.Payroll
@using AprajitaRetails.Commons
@using AprajitaRetails.AdminLte.Table
@using Microsoft.AspNetCore.Authorization
@inject NavigationManager NavigationManager
@attribute [Authorize]

@inject ClientSetting Setting
@inject DataHelper Helper

<EntityDetails Title="@Title" Loading=@Loading OnBack="BackButton" OnDelete="DeleteButton">

    <EntityRow Lable="Voucher" Value="@entity.VoucherType.ToString()" />
    <EntityRow Lable="ID" Value="@entity.VoucherNumber" />
    @if (string.IsNullOrEmpty(entity.SlipNumber) == false)
    {
        <EntityRow Lable="Slip No" Value="@entity.SlipNumber" />
    }
    <EntityRow Lable="Date" Value="@entity.OnDate.ToString()" />
    <EntityRow Lable="PartyName" Value="@entity.PartyName" />
    <EntityRow Lable="Particulars" Value="@entity.Particulars" />
    <EntityRow Lable="Mode" Value="@entity.PaymentMode.ToString()" />
    <EntityRow Lable="Amount" Value="@entity.Amount.ToString()" />
    <EntityRow Lable="Remarks" Value="@entity.Remarks" />
    <EntityRow Lable="Acc No" Value="@entity.AccountId.ToString()" />
    <EntityRow Lable="Payment Details" Value="@entity.PaymentDetails" />
    @if (party != null)
    {
        <EntityRow Lable="Ledger" Value="@party.PartyName" />
    }
    @if (employee != null)
    {
        <EntityRow Lable="Issued By" Value="@employee.StaffName" />
    }

</EntityDetails>

@code {
    [Parameter] public string? ID { get; set; }
    Voucher? entity;
    Employee? employee;
    Party? party;

    string Title = "Details";
    bool Loading = true;
    void BackButton() { NavigationManager.NavigateTo("/vouchers"); }
    void DeleteButton() { }

    protected override async void OnInitialized()
    {
        if (!string.IsNullOrEmpty(ID))
        {
            entity = await Helper.GetRecordAsync<Voucher>($"api/Vouchers", ID);
            Title = "Voucher: " + entity.VoucherNumber;
            employee = await Helper.GetRecordAsync<Employee>($"Employees", entity.EmployeeId);

            if (string.IsNullOrEmpty(entity.PartyId) == false)
                party = await Helper.GetRecordAsync<Party>($"Parties", entity.PartyId);

            Loading = false;
            StateHasChanged();
        }
        else
        {
            BackButton();
            Helper.Msg("Error", "Please Select Voucher for details", true);
        }
    }
}