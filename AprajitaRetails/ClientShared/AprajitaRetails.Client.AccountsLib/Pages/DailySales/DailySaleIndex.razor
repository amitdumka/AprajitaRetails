@page "/accounts/DailySales"

@inherits AprajitaRetails.BasicViews.IndexView

@using AprajitaRetails.Shared.Models.Vouchers;
@using Microsoft.AspNetCore.Authorization;
@using Syncfusion.Blazor.Grids
@using System.Globalization;
@using AprajitaRetails.Shared.AutoMapper.DTO
@using AprajitaRetails.Commons

@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using AprajitaRetails.Shared
@using AprajitaRetails.Client.Helpers
@using AprajitaRetails.Shared.ViewModels

@using AprajitaRetails.Aks
@using System.Reflection

@attribute [Authorize]

@inject DataHelper Helper
@inject ClientSetting Setting
@inject NavigationManager NavigationManager

<EntityGridIndex TItem="DailySaleDTO" Title="Daily Sale" Columns="@GridCols" EnableAggretor=true
                 Baseurl=@BaseURL CommandClicked="OnCommandClicked"
                 @bind-Entities="@entities" @bind-GroupedColumn="@GroupedColumn" Grouping=true></EntityGridIndex>

@code {
    private const string BaseURL = "/accounts/DailySales";
    private List<DailySaleDTO>? entities;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            GroupedColumn = new string[] { "ManualBill", "SalesReturn" };
            InitView();
            await FetchDataAsync();
            GenerateColums(typeof(DailySaleDTO).GetProperties(), "InvoiceNumber");
            StateHasChanged();
            base.OnInitialized();
        }
        catch (Exception exception)
        {

            Helper.Msg("Error On Init", exception.Message, true);
        }

    }

    async Task<List<DailySaleDTO>?> FetchDataAsync()
    {
        entities = await Helper.FetchAsync<DailySaleDTO>($"DailySales/bystoredto", $"?storeid={Setting.StoreCode}");
        return entities;

    }
    public void OnCommandClicked(CommandClickEventArgs<DailySaleDTO> args)
    {

        if (args.CommandColumn.Type == CommandButtonType.None && args.CommandColumn.Title == "Edit")
        {
            NavigationManager.NavigateTo($"{BaseURL}/Edit/true/{args.RowData.InvoiceNumber}");
        }
        else if (args.CommandColumn.Type == CommandButtonType.None && args.CommandColumn.Title == "Delete")
        {

            NavigationManager.NavigateTo($"{BaseURL}/Detail/{args.RowData.InvoiceNumber}");
        }
        else if (args.CommandColumn.Type == CommandButtonType.None && args.CommandColumn.Title == "Detail")
        {

            NavigationManager.NavigateTo($"{BaseURL}/Detail/{args.RowData.InvoiceNumber}");
        }
        else
        {
            Helper.Msg("Error", "This function is not enabled!", true);
        }
    }

}


