@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@inject ILayoutManager layoutManager
@inject NavBarLeftInjectableMenu navBarLeftInjectableMenu
@using AprajitaRetails.AdminLte
<RadzenDialog />
<RadzenNotification />
<RadzenContextMenu />
<RadzenTooltip />
<Syncfusion.Blazor.Popups.SfDialogProvider />
<ANavBar DarkMode=true >
   <AprajitaRetails.Client.Shared.Apps.Menu.AppTopBar/>
</ANavBar>
<SideBarContainer>
    <BrandLogo Link="https://adminlte.io/" Logo="../dist/img/AdminLTELogo.png">Aprajita Retails</BrandLogo>
   <AprajitaRetails.Client.Shared.Apps.Menu.AppSideBar/>
</SideBarContainer>
<ContentWrapper>
    @Body
</ContentWrapper>
<ControlSideBar>Aprajita Retails</ControlSideBar>

<MainFooter>
    <Default>
        <strong>Copyright &copy; 2022 <a href="https://adminlte.io">AKS Labs</a>.</strong> All rights reserved.

    </Default>
    <Right>
        Developed By Amit Kumar
    </Right>
</MainFooter>

@code {
    protected override void OnParametersSet()
    {
        // content = null; for refreshing custom menu injectables per page.
        // no override; reset default to show parent menu content items.
        navBarLeftInjectableMenu.SetContent(null, false);
    }

    

    private void SeeAllMessages(Tuple<IDropdownFooter, MouseEventArgs> args)
    {
        NavigationManager.NavigateTo("messages/see-all-messages");
    }

    private void HandleContent(Tuple<INavBarMenuItem, MouseEventArgs> args)
    {
        NavigationManager.NavigateTo("messages/see-all-messages");
    }

    private void SeeAllNotifications(Tuple<IDropdownFooter, MouseEventArgs> args)
    {
        NavigationManager.NavigateTo("messages/see-all-notifications");
    }

    protected override void OnAfterRender(bool isFirstRender)
    {
        layoutManager.IsFooterFixed = true;
        layoutManager.IsNavBarFixed = true;
        layoutManager.IsSideBarFixed = true;
        base.OnAfterRender(isFirstRender);
    }
}