@page "/payroll/employees/detail/{*ID}"

@using AprajitaRetails.Shared.Models.Payroll
@using AprajitaRetails.Commons
@using AprajitaRetails.AdminLte.Table
@using Microsoft.AspNetCore.Authorization
@inject NavigationManager NavigationManager
@inject LocalStorageAccessor LocalStorage
@attribute [Authorize]
@inject HttpClient Http
@inject ClientSetting Setting
@inject DataHelper Helper

@using AprajitaRetails.Helpers

<EntityDetails Title="@Title" Loading=@Loading OnBack="BackButton" OnDelete="DeleteButton" @bind-Deleted="@isDeleted">
    <EntityRow Lable="ID" Value="@entity.EmployeeId" />
    <EntityRow Lable="Name" Value="@entity.StaffName" />
    <EntityRow Lable="Birth Date" Value="@entity.DOB.ToString()" />
    <EntityRow Lable="City" Value="@entity.City" />
    <EntityRow Lable="Category" Value="@entity.Category.ToString()" />
    <EntityRow Lable="Geneder" Value="@entity.Gender.ToString()" />
    <EntityRow Lable="Joining Date" Value="@entity.JoiningDate.ToString()" />
</EntityDetails>

@code {
    [Parameter] public string? ID { get; set; }
    Employee? entity;
    EmployeeDetails? details;
    string Title = "Details";
    bool Loading = true;
    void BackButton() { NavigationManager.NavigateTo("/payroll/employees"); }
    bool isDeleted = false;
    async void DeleteButton()
    {
        var result = await Helper.DeleteAsync($"api/Employees", "Employee", ID);
        if (result)
        {
            isDeleted = true;
            StateHasChanged();
        }
    }
    protected override async void OnInitialized()
    {
        if (!string.IsNullOrEmpty(ID))
        {
            //ID = ID ?? "NO ID Found";
            entity = await Http.GetFromJsonAsync<Employee>($"api/Employees/{ID}");
            Title = "Details of " + entity.StaffName;
            //details = await Http.GetFromJsonAsync<EmployeeDetails>($"api/EmployeeDetails/{ID}");
            //TODO: Implement it
            Loading = false;
            StateHasChanged();
        }
        else
        {
            //alert
        }
    }
}