@page "/reports/ledgerdetails"

@using Microsoft.AspNetCore.Authorization;
@using AprajitaRetails.Commons
@using AprajitaRetails.AdminLte
@using AprajitaRetails.Shared.Models.Banking
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@using AprajitaRetails.Shared.Models.Payroll;
@using Syncfusion.Blazor.Grids
@using System.Globalization;
@using AprajitaRetails.Shared.AutoMapper.DTO
@using AprajitaRetails.Shared
@using AprajitaRetails.Client.Helpers
@using AprajitaRetails.Shared.ViewModels
@using AprajitaRetails.Aks
@using System.Reflection

@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Calendars

@attribute [Authorize]

@inject DataHelper Helper
@inject ClientSetting Setting
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@inject NotificationService NotificationService
@inject SfDialogService DialogService
@inject HttpClient Http

<ContentHeader>
    <Header> <Blazor.AdminLte.PageTitle Title="@Title" /></Header>
</ContentHeader>

<ContentMain>
    <Row>
        <Column Classes="col.md">
            <div class="mb-3 row">
                <div class="col-sm-2">
                   Store Group / StoreId
                </div>
            </div>

        </Column>

        <Column Classes="col.md">
            <div class="mb-3 row">
                <label for="ondate" class="col-sm-4 col-form-label">Date</label>
                <div class="col-sm-8">
                   PartyName

                </div>
            </div>
        </Column>
        <Column Classes="col.md">
            <div class="mb-3 row align-end">
                <div class="col-sm-2">
                    <Button Size="Blazor.AdminLte.ButtonSize.Small" Color="Color.Warning" @onclick="FetchRecordButton">+</Button>
                </div>
            </div>

        </Column>




    </Row>
    <Row>
        <div class="card   bg-primary">
            <div class="card-header">
                <h3 class="card-title">Ledger Book   <span class="badge badge-warning ">[@OnDate.Date.ToShortDateString()]</span></h3>
                <div class="card-tools">
                    <!-- Buttons, labels, and many other things can be placed here! -->
                    <!-- Here is a label for example -->
                    <span class="badge badge-primary">Close</span>
                </div>
                <!-- /.card-tools -->
            </div>
            <!-- /.card-header -->
            <div class="card-body">
                Ledger Details
                <Row>
                    <Column>
                        <Table>
                            <TableHead>
                                <TableRow>
                                    <TableHeadCell>#</TableHeadCell>
                                    <TableHeadCell>Date</TableHeadCell>
                                    <TableHeadCell>Type</TableHeadCell>
                                    <TableHeadCell>Ref No</TableHeadCell>
                                    <TableHeadCell>Naration</TableHeadCell>
                                    <TableHeadCell>Payment Mode</TableHeadCell>
                                    <TableHeadCell>Details</TableHeadCell>
                                    <TableHeadCell>In Amount</TableHeadCell>
                                    <TableHeadCell>Out Amount</TableHeadCell>
                                    @* <TableHeadCell>Out Amount</TableHeadCell> *@
                                </TableRow>
                            </TableHead>
                            <TableBody>

                                @if (entity != null && entity.MonthViews != null)
                                {
                                    int count = 1;
                                    intotal = 0; outtotal = 0;
                                    foreach (var item in entity.MonthViews)
                                    {

                                        <TableRow>
                                            <TableCell>@(count++)</TableCell>
                                            <TableCell>@item.ParticularsName</TableCell>
                                                <TableCell>@item.VoucherType</TableCell>
                                                <TableCell>@item.VoucherNumber</TableCell>
                                                <TableCell>
                                                    @if (item.InAmount > 0)
                                                {
                                                    intotal += item.InAmount;
                                                    <span>@item.InAmount</span>
                                                }
                                            </TableCell>

                                            @* <TableCell>
                                    @if (item.OutAmount > 0)
                                    {
                                    outtotal += item.OutAmount;
                                    <span>@item.OutAmount</span>
                                    }
                                    </TableCell> *@
                                        </TableRow>
                                    }
                                }
                            </TableBody>
                        </Table>
                    </Column>
                    <Column>
                        <Table>
                            <TableHead>
                                <TableRow>
                                    <TableHeadCell>#</TableHeadCell>
                                    <TableHeadCell>Particulars</TableHeadCell>
                                    <TableHeadCell>Voucher Type</TableHeadCell>
                                    <TableHeadCell>Voucher Number</TableHeadCell>
                                    @*  <TableHeadCell>In Amount</TableHeadCell> *@
                                    <TableHeadCell>Out Amount</TableHeadCell>
                                </TableRow>
                            </TableHead>
                            <TableBody>

                                @if (entity != null && entity.MonthViews != null)
                                {
                                    int count = 1;
                                    intotal = 0; outtotal = 0;
                                    foreach (var item in entity.MonthViews)
                                    {

                                        <TableRow>
                                            <TableCell>@(count++)</TableCell>
                                            <TableCell>@item.ParticularsName</TableCell>
                                                <TableCell>@item.VoucherType</TableCell>
                                                <TableCell>@item.VoucherNumber</TableCell>
                                                @*  <TableCell>
                                    @if (item.InAmount > 0)
                                    {
                                    intotal += item.InAmount;
                                    <span>@item.InAmount</span>
                                    }
                                    </TableCell> *@

                                                <TableCell>
                                                    @if (item.OutAmount > 0)
                                                {
                                                    outtotal += item.OutAmount;
                                                    <span>@item.OutAmount</span>
                                                }
                                            </TableCell>
                                        </TableRow>
                                    }
                                }
                            </TableBody>
                        </Table>
                    </Column>
                </Row>

            </div>
            <!-- /.card-body -->
            <div class="card-footer align-content-end text-end ml-5 mr-5">
                Day Book Total  <span class="text-success mr-5 ml-5">@intotal</span> <span class="text-warning mr-5 ml-5">@outtotal</span>
            </div>
            <!-- /.card-footer -->
        </div>

    </Row>
</ContentMain>

@code {
    private string Title = "Ledger Book";
    private const string URL = "api/Parties/ledgerdetails";
   //private DateTime OnDate = DateTime.Today;
    private List<LedgerDetail>? entity = null;
    private decimal intotal = 0, outtotal = 0;
    void FetchRecordButton(){

    }
    protected override async Task OnInitializedAsync()
    {
        try
        {
            this.OnDate = new DateTime(2024, 1, 3);
            await FetchDataAsync();

            StateHasChanged();
            base.OnInitialized();
        }
        catch (Exception exception)
        {

            Helper.Msg("Error On Init", exception.Message, true);
        }

    }

    async Task FetchDataAsync()
    {
        //intotal = 0; outtotal = 0;
        entity = await Helper.PostDataFromAsync<MonthViewReturn, MonthViewRequest>(URL, new MonthViewRequest { CashVoucher = true, OnDate = OnDate, StoreCode = "ARD", StoreCodeName = "StoreCode", Mode = ClientReportMode.Store }, Title);

        StateHasChanged();



    }
    // private async Task DateChange(EventArgs e)
    // {
    //     await FetchDataAsync();
    //     // StateHasChanged();
    // }
    public async void DateChange(ChangedEventArgs<DateTime> args)
    {
        OnDate = args.Value.Date;
        await FetchDataAsync();
    }
}
