@page "/stores/SelectedStore"

@using AprajitaRetails.Commons
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@using AprajitaRetails.Shared.Models.Payroll
@using AprajitaRetails.Shared.ViewModels;
@using AprajitaRetails.AdminLte.Forms
@using Microsoft.AspNetCore.Authorization
@using Radzen.Blazor
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Calendars
@using AprajitaRetails.Helpers
@attribute [Authorize]
@*@inject HttpClient Http*@
@inject ClientSetting Setting
@inject DataHelper DataHelper


<ContentHeader>
    <Header> <Blazor.AdminLte.PageTitle Title="Current Store" /></Header>
</ContentHeader>
<ContentMain>

    <Row>
        <Column Classes="col.md">
            <div class="mb-3 row">
                <label for="Store" class="col-sm-4 col-form-label">Store</label>
                <div class="col-sm-6">
                    <SfComboBox TValue="string" TItem="SelectOption" Placeholder="Store"
                                Autofill="true" 
                                @bind-Value="@SelectedStoreId" PopupHeight="230px"
                                DataSource="@Stores">
                        <ComboBoxFieldSettings Text="Value" Value="ID" />
                    </SfComboBox>
                </div>
            </div>
        </Column>
        <Column Classes="col.md">
            <button @onclick="@SetStore">Change</button>
        </Column>
    </Row>
</ContentMain>

@code {
    private IList<SelectOption>? Stores;
    private string SelectedStoreId = "";
    private async Task<bool> FetchSelectData()
    {
        try
        {
            Stores = await DataHelper.FetchOptionsAsync("Stores", null);
            return true;
        }
        catch (Exception)
        {

            return false;
        }

    }
    void SetStore()
    {
        Setting.StoreCode = SelectedStoreId;
        Setting.StoreName = Stores.Where(c => c.ID == SelectedStoreId).First().Value;
        DataHelper.Msg("Store", $"Current Store: {Setting.StoreCode}/{Setting.StoreName}");
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        SelectedStoreId = Setting.StoreCode;
        await FetchSelectData();
        StateHasChanged();

    }
}

