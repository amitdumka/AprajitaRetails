@page "/stores/Customers"


@inherits AprajitaRetails.BasicViews.IndexView

@using AprajitaRetails.Shared.Models.Stores;
@using Microsoft.AspNetCore.Authorization;
@using Syncfusion.Blazor.Grids
@using System.Globalization;
@using AprajitaRetails.Shared.AutoMapper.DTO
@using AprajitaRetails.Commons

@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using AprajitaRetails.Shared
@using AprajitaRetails.Client.Helpers
@using AprajitaRetails.Shared.ViewModels

@using AprajitaRetails.Aks
@using System.Reflection

@attribute [Authorize]

@inject DataHelper Helper
@inject ClientSetting Setting
@inject NavigationManager NavigationManager

<EntityGridIndex TItem="Customer" Title="Customers" Columns="@GridCols" EnableAggretor=false
                 Baseurl=@BaseURL CommandClicked="OnCommandClicked"
                 @bind-Entities="@entities" @bind-GroupedColumn="@GroupedColumn" Grouping=true></EntityGridIndex>

@code {
    private const string BaseURL = "/stores/Customers";
    private List<Customer>? entities;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            GroupedColumn = new string[] {"City"};
            InitView();
            await FetchDataAsync();
            GenerateColums(typeof(Customer).GetProperties(), "MobileNo");
            StateHasChanged();
            base.OnInitialized();
        }
        catch (Exception exception)
        {

            Helper.Msg("Error On Init", exception.Message, true);
        }

    }

    async Task<List<Customer>?> FetchDataAsync()
    {
        entities = await Helper.FetchAsync<Customer>($"api/Customers", "");
        return entities;

    }
    public void OnCommandClicked(CommandClickEventArgs<Customer> args)
    {

        if (args.CommandColumn.Type == CommandButtonType.None && args.CommandColumn.Title == "Edit")
        {
            NavigationManager.NavigateTo($"{BaseURL}/Edit/true/{args.RowData.MobileNo}");
        }
        else if (args.CommandColumn.Type == CommandButtonType.None && args.CommandColumn.Title == "Delete")
        {

            NavigationManager.NavigateTo($"{BaseURL}/Detail/{args.RowData.MobileNo}");
        }
        else if (args.CommandColumn.Type == CommandButtonType.None && args.CommandColumn.Title == "Detail")
        {

            NavigationManager.NavigateTo($"{BaseURL}/Detail/{args.RowData.MobileNo}");
        }
        else
        {
            Helper.Msg("Error", "This function is not enabled!", true);
        }
    }

}


