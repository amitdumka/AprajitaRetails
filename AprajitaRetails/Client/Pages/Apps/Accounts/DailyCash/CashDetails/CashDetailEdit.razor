@page "/accounts/CashDetails/Edit/{IsEdit:bool}/{*params}"

@using AprajitaRetails.Commons
@using AprajitaRetails.Shared.Models.Stores
@using AprajitaRetails.Shared.ViewModels;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;
@using AprajitaRetails.AdminLte.Forms
@using Microsoft.AspNetCore.Authorization
@using Radzen.Blazor
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Calendars

@attribute [Authorize]
@inject HttpClient Http 

<ContentMain>
    <EntityEdit @bind-EntityModel=@entity TItem="@CashDetail" Title="Cash Tally" ApiUrl="CashDetails" ReturnUrl="/accounts/CashDetails" Id="@Id" IsEdit=@IsEdit>
        <Row>
            <Column Classes="col.md">
                <div class="mb-3 row">
                    <label for="Store" class="col-sm-4 col-form-label">Store</label>
                    <div class="col-sm-6">
                        <SfComboBox TValue="string" TItem="SelectOption" Placeholder="Store"
                                    Autofill="true"
                                    @bind-Value="@entity.StoreId" PopupHeight="230px"
                                    DataSource="@Stores">
                            <ComboBoxFieldSettings Text="Value" Value="ID" />
                        </SfComboBox>
                    </div>
                </div>
            </Column>
            <Column Classes="col.md">
                <div class="mb-3 row">
                    <label for="ondate" class="col-sm-4 col-form-label">Date</label>
                    <div class="col-sm-6">
                         <SfDatePicker  @bind-Value="@entity.OnDate" Format="dd-MM-yyyy" TValue="DateTime" Placeholder="Choose a Date" ShowClearButton="true"></SfDatePicker>
                    </div>
                </div>
            </Column>
        </Row>

        <Row>
            <Column Classes="col.md">
                <ANumInput @bind-Value="@entity.Count" Name="opn" Label="Count" />
            </Column>
            <Column Classes="col.md">
                <ANumInput @bind-Value="@entity.TotalAmount" Name="close" Label="Total Amount" />
            </Column>
        </Row>

        <Row>
            <Column Classes="col.md"><ANumInput @bind-Value=@entity.N2000 Name="Sale" Label="2000" /></Column>
            <Column Classes="col.md"><ANumInput @bind-Value=@entity.N1000 Name="ManualSale" Label="1000" /></Column>
            <Column Classes="col.md"><ANumInput @bind-Value=@entity.N500 Name="TailoringSale" Label="500" /></Column>
            <Column Classes="col.md"><ANumInput @bind-Value=@entity.N200 Name="BankWithdrawal" Label="200" /></Column>
        </Row>
        <Row>
            <Column Classes="col.md"><ANumInput @bind-Value=@entity.N100 Name="Recovery" Label="100" /></Column>
            <Column Classes="col.md"><ANumInput @bind-Value=@entity.N20 Name="CustomerRecovery" Label="20" /></Column>
            <Column Classes="col.md"><ANumInput @bind-Value=@entity.N10 Name="Rect" Label="10" /></Column>
        </Row>
        <Row>

            <Column Classes="col.md"><ANumInput @bind-Value=@entity.C10 Name="rectt" Label="Coin 10" /></Column>
            <Column Classes="col.md"><ANumInput @bind-Value=@entity.C5 Name="CardSale" Label="Coin 5" /></Column>
            <Column Classes="col.md"><ANumInput @bind-Value=@entity.C2 Name="Non" Label="Coin Cash 2" /></Column>
            <Column Classes="col.md"><ANumInput @bind-Value=@entity.C1 Name="de" Label="Coin 1" /></Column>

        </Row>

    </EntityEdit>

    <Row>
        <Column Classes="col.md">
            <div class="bg-warning text-danger-emphasis">
                <label>Click Calulate Button before Saving</label>
            </div>
        </Column>

        <Column Classes="col.md">
            <div class="bg-info-subtle text-warning-emphasis">
                <Button Color="Blazor.AdminLte.Color.Warning" @onclick="@Caluclate">Calculate</Button>
            </div>
        </Column>
    </Row>
</ContentMain>

@code {
    [Parameter] public bool IsEdit { get; set; }
    [Parameter] public string? Id { get; set; }
    private CashDetail entity = new CashDetail { OnDate = DateTime.Now };

    private IList<SelectOption>? Stores;
    // private IList<SelectOption>? Employees;
    IList<string> Components = Enum.GetNames(typeof(SalaryComponent));
    IList<string> PayModes = Enum.GetNames(typeof(PayMode));

    private void Caluclate()
    {
        var e = entity;
        entity.Count = e.C1 + e.N10 + e.N1000 + e.N50 + e.N2000 + e.N100 + e.C2 + e.C5 + e.C10 + e.N200 + e.N500 + e.N20;
        entity.TotalAmount = e.C1 + (10 * e.N10) + (1000 * e.N1000) + (e.N50 * 50) + (e.N2000 * 2000) + (e.N100 * 100) + (e.C2 * 2) + (5 * e.C5) + (e.C10 * 10) + (e.N200 * 200) + (e.N500 * 500) + (e.N20 * 20);
        StateHasChanged();
    }
    private async Task<bool> FetchSelectData()
    {
        try
        {

            Stores = await Http.GetFromJsonAsync<IList<SelectOption>>("Helper/Stores");
            return true;
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
            return false;
        }

    }

    protected override async Task OnInitializedAsync()
    {
        await FetchSelectData();
        if (IsEdit)
        {
            entity = await Http.GetFromJsonAsync<CashDetail>($"CashDetails/{Id}");
            StateHasChanged();
        }
        else
        {
            entity = new CashDetail
            {
                OnDate = DateTime.Now,
                EntryStatus = EntryStatus.Added,
                IsReadOnly = false,
                MarkedDeleted = false,
                StoreId = Stores != null ? Stores[0].ID : "",
                UserId = "BlazorUI",
                C1 = 0,
                C10 = 0,
                C2 = 0,
                C5 = 0,
                CashDetailId = "",
                Count = 0,
                N10 = 0,
                N100 = 0,
                N1000 = 0,
                N20 = 0,
                N200 = 0,
                N2000 = 0,
                N50 = 0,
                N500 = 0,
                TotalAmount = 0,
            };
        }

    }
}