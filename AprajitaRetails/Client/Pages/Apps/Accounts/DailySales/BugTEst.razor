@page "/BugTest"

@using AprajitaRetails.Shared.Models.Inventory
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using AprajitaRetails.AdminLte.Forms
@using Radzen.Blazor
@using AprajitaRetails.Shared.ViewModels
@using AprajitaRetails.Commons
@using AprajitaRetails.Shared.Models.Payroll
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Calendars
@using AprajitaRetails.Helpers
@using System.Text.Json


@attribute [Authorize]
@inject ClientSetting Setting
@inject DataHelper Helper

<ContentMain>
    <EntityList Title="Stocks" BaseUrl="/banking/Banks" Loading=@Loading>
        <TableHead>
            <TableHeadCell>Barcode</TableHeadCell>
            <TableHeadCell>CostPrice </TableHeadCell>
            <TableHeadCell>MRP </TableHeadCell>
            <TableHeadCell>Qty </TableHeadCell>
            <TableHeadCell>Mutli </TableHeadCell>
            <TableHeadCell>Value </TableHeadCell>
            <TableHeadCell>Store </TableHeadCell>


        </TableHead>
        <TableBody>
            @foreach (var x1 in Stocks)
                {
                    foreach (var ent in x1.Value)
                    {


                <TableRow>
                    <TableCell>@ent.Barcode</TableCell>
                    <TableCell>@ent.CostPrice</TableCell>
                    <TableCell>@ent.MRP</TableCell>
                    <TableCell>@ent.PurchaseQty</TableCell>
                    <TableCell>@ent.MultiPrice</TableCell>
                    <TableCell>@ent.StockValue</TableCell>
                    <TableCell>@ent.StoreId</TableCell>
                </TableRow>}
            }
        </TableBody>
    </EntityList>
</ContentMain>

@code {

    SortedDictionary<string, List<Stock>>? Stocks;
    bool Loading = true;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            var x = await Helper.FetchDictAsync<SortedDictionary<string,List<Stock>>>("api/Stocks/NewStock", null);
            Loading = false;
            StateHasChanged();
        }
        catch (Exception ex)
        {
            throw;
        }
    }

}