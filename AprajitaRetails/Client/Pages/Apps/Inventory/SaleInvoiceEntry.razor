@page "/sales/{Returns:bool}/{params}/edit/{IsEdit:bool}/{*Id}"
@page "/sales/{Returns:bool}/{params}/edit/{IsEdit:bool}"


@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Calendars
@using AprajitaRetails.Helpers
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Navigations
@using AprajitaRetails.Aks
@using AprajitaRetails.Aks.Forms
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Popups
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using AprajitaRetails.Shared.Models.Stores

@using AprajitaRetails.AdminLte.Forms
@using Radzen.Blazor
@using AprajitaRetails.Shared.ViewModels
@using AprajitaRetails.Commons
@using AprajitaRetails.Shared.Models.Inventory
@using Append.Blazor.Printing

@inject IPrintingService PrintingService

@inject NavigationManager Navigation
@inject NavigationManager NavigationManager
@inject HttpClient HttpC

@attribute [Authorize]
@inject ClientSetting Setting
@inject DataHelper Helper

<ContentHeader>
    <Header>
        <Blazor.AdminLte.PageTitle Title=@Title />
    </Header>
</ContentHeader>

<ContentMain>
    <EditForm Model=@entity OnValidSubmit=@Save OnInvalidSubmit=@Helper.ErrorMsg>

        <Card ToolOptions="new CardToolOptions { Collapsable = true, Maximizable=true}">
            <Title><CardTitle>@Title</CardTitle></Title>
                <Header><CardTools /></Header>
                <Body>
                    <Row>
                        <Column Classes="col.md">
                            <div class="mb-3 row">
                                <label for="Store" class="col-sm-4 col-form-label">Store</label>
                                <div class="col-sm-6">
                                    <SfComboBox TValue="string" TItem="SelectOption" Placeholder="Store"
                                                Autofill="true"
                                                @bind-Value="@entity.StoreId" PopupHeight="230px"
                                                DataSource="@Stores">
                                        <ComboBoxFieldSettings Text="Value" Value="ID" />
                                    </SfComboBox>
                                </div>
                            </div>
                        </Column>
                        <Column Classes="col.md">
                            <div class="mb-3 row">
                                <label for="ondate" class="col-sm-4 col-form-label">Date</label>
                                <div class="col-sm-6">
                                    <SfDatePicker @bind-Value="@entity.OnDate" Format="dd-MM-yyyy" TValue="DateTime" Placeholder="Choose a Date" ShowClearButton="true"></SfDatePicker>
                                </div>
                            </div>
                        </Column>
                        <Column Classes="col.md">
                            <div class="mb-3 row">
                                <label for="inv" class="col-sm-4 col-form-label">Invoice Type</label>
                                <div class="col-sm-6">
                                    <SfComboBox TValue="InvoiceType" TItem="string" Placeholder="Invoice Type"
                                                Autofill="true"
                                                @bind-Value="@entity.InvoiceType" PopupHeight="230px"
                                                DataSource="@invTypes">
                                        <ComboBoxFieldSettings Text="Value" Value="ID" />
                                    </SfComboBox>
                                </div>
                            </div>
                        </Column>
                    </Row>
                    <div class="row  text-center row-cols-5 justify-content-start mb-3">
                        <Column Classes="col.sm">
                            <SfTextBox @bind-Value="@mobileno" Placeholder="Customer Mobile" FloatLabelType="FloatLabelType.Never" />
                        </Column>
                        <Column Classes="col.sm">
                            <SfTextBox Placeholder="Customer Name" @bind-Value="custname" />
                        </Column>
                        <Column>
                            <button type="button" @onclick="@SearchCustomerAsync" class="btn btn-info btn-circle btn-sm">
                                <i class="fa-solid fa-magnifying-glass"></i>
                            </button>
                            <button type="button" @onclick="@AddCustomer" class="btn btn-warning btn-circle btn-sm">
                                <i class="fa-solid fa-person-circle-plus"></i>
                            </button>

                        </Column>
                        <Column Classes="col.md"></Column>
                        <Column Classes="col.md"></Column>
                       
                    </div>
                    <Row>
                        @if (IsEdit)
                    {
                        <Column Classes="col.md"><ATextInput disabled @bind-Value=@entity.InvoiceNo Name="Invno" Label="Invoice No" /></Column>
                    }
                    <Column Classes="col.md">
                        <ACheckBox Title="Adjustment" Name="d5" @bind-Checked="@entity.Adjusted" />
                    </Column>

                    <Column Classes="col.md">
                        <div class="mb-3 row">
                            <label for="sm" class="col-sm-4 col-form-label">Sale's man</label>
                            <div class="col-sm-6">
                                <SfComboBox TValue="string" TItem="SelectOption" Placeholder="sm"
                                            Autofill="true"
                                            @bind-Value="@entity.SalesmanId" PopupHeight="230px"
                                            DataSource="@Salesmen">
                                    <ComboBoxFieldSettings Text="Value" Value="ID" />
                                </SfComboBox>
                            </div>
                        </div>
                    </Column>
                </Row>
                <Row>
                    <Column Classes="col.md"><AInputNumber Value="@entity.TotalQty" Name="TotalQty" Label="Qty" /></Column>
                    <Column Classes="col.md"><AInputNumber @bind-Value=@entity.FreeQty Name="qq" Label="Free Qty" /></Column>
                    <Column Classes="col.md"><AInputNumber @bind-Value=@entity.BilledQty Name="NAmount" Label="Billed Qty" /></Column>
                </Row>
                <Row>
                    <Column Classes="col.md"><AInputNumber @bind-Value=@entity.TotalMRP Name="MRPAmount" Label="MRP" /></Column>
                    <Column Classes="col.md"><AInputNumber @bind-Value=@entity.TotalDiscountAmount Name="qq" Label="Discount Amount" /></Column>
                    <Column Classes="col.md"><AInputNumber @bind-Value=@entity.TotalPrice Name="qq" Label="Bill Amount" /></Column>
                </Row>
                <Row>
                    <Column Classes="col.md"><AInputNumber @bind-Value=@entity.TotalBasicAmount Name="NAmount" Label="Basic Amount" /></Column>
                    <Column Classes="col.md"><AInputNumber @bind-Value=@entity.TotalTaxAmount Name="MRPAmount" Label="Tax" /></Column>
                    <Column Classes="col.md"><AInputNumber @bind-Value=@entity.RoundOff Name="NAmount" Label="Round Off" /></Column>
                </Row>
                <div class="row  text-center row-cols-5 justify-content-start ">
                    <Column Classes="col.sm">

                        <label class="small">Barcode</label>
                    </Column>
                    <Column Classes="col.sm"> <label class="small">Qty</label></Column>
                    <Column Classes="col.sm"> <label class="small">Rate</label></Column>
                    <Column Classes="col.sm"> <label class="small">Discount</label></Column>
                    <Column Classes="col.sm"> <label class="small">Amount</label> </Column>
                    <Column Classes="col.sm"> </Column>
                </div>
                <div class="row  text-center row-cols-5 justify-content-start mb-3">
                    <Column Classes="col.sm">
                        @*<ABTextInput Label="Barcode" @bind-Value="Item.Barcode" Placeholder="Barcode" />*@
                        <SfTextBox ValueChange="@OnBarcodeChange" @bind-Value="@Item.Barcode" Placeholder='Barcode'></SfTextBox>
                    </Column>
                    <Column Classes="col.sm"><SfNumericTextBox OnChange="@OnChange" TValue="decimal" Label="Qty" @bind-Value="Item.Qty" Placeholder="Qty" /> </Column>
                    <Column Classes="col.sm"><SfNumericTextBox OnChange="@OnChange" TValue="decimal" Label="Rate" @bind-Value="Item.Rate" Placeholder="Rate" /> </Column>
                    <Column Classes="col.sm"><SfNumericTextBox OnChange="@OnChange" TValue="decimal" Label="Discount" @bind-Value="Item.Discount" Placeholder="Discount" Readonly="true" /> </Column>
                    <Column Classes="col.sm"><SfNumericTextBox TValue="decimal" Label="Amount" @bind-Value="Item.Amount" Placeholder="Amount" /> </Column>
                    @*<Column Classes="col.sm"><SfButton  OnClick="AddItem" CssClass="e-round e-small e-success	" IconCss="e-icons e-plus-icon" IsPrimary="false"></SfButton></Column>*@

                    <Column>
                        <button type="button" @onclick="@AddDiscount" class="btn btn-info btn-circle btn-sm">
                            <i class="fas fa-percent"></i>
                        </button>
                        <button type="button" @onclick="@AddItem" class="btn btn-success btn-circle btn-sm">
                            <i class="fas fa-add"></i>
                        </button>

                    </Column>
                </div>
                <Row>
                    <SfGrid TValue="SItem" DataSource="@SaleItemList" AllowTextWrap=true AllowResizing="true"
                            AllowSelection="true"
                            Toolbar="@(new List<string>() { "Delete", "Cancel" })"
                            AllowPaging="true" ID="Grid" @ref="Grid" Columns="@Columns">
                        <GridPageSettings PageSize="4"></GridPageSettings>
                        <GridSelectionSettings Type="Syncfusion.Blazor.Grids.SelectionType.Multiple"></GridSelectionSettings>
                        <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" ShowDeleteConfirmDialog="true"></GridEditSettings>
                        <GridTemplates>
                            <EmptyRecordTemplate Context="newname">
                                <span>Product Item : No SKU has been added!  </span>
                            </EmptyRecordTemplate>
                        </GridTemplates>
                        <GridEvents OnToolbarClick="ToolbarClickHandler" TValue="SItem"></GridEvents>
                        @* <GridEvents OnToolbarClick="ToolbarClick" TValue="SItem"></GridEvents>*@
                        <EntityAggregator>
                            <EntityAggSumFooter Title="Total Amount" Field="@nameof(SItem.Amount)"></EntityAggSumFooter>
                            <EntityAggSumFooter Format="f" Title="Total Qty" Field="@nameof(SItem.Qty)"></EntityAggSumFooter>
                        </EntityAggregator>

                    </SfGrid>
                </Row>
                <Row>
                    <Column Classes="col.auto">
                        <div class="mb-3 row">
                            <label for="sm" class="col-sm-4 col-form-label">Payment</label>
                            <div class="col-sm-6">
                                <SfComboBox TValue="PayMode" TItem="string" Placeholder="PayMode"
                                            Autofill="true"
                                            @bind-Value="@payment.PayMode" PopupHeight="230px"
                                            DataSource="@payModes">
                                    <ComboBoxFieldSettings Text="Value" Value="ID" />
                                </SfComboBox>
                            </div>
                        </div>
                    </Column>

                    <Column Classes="col.md">
                        <SfNumericTextBox Placeholder="Paid Amount" TValue="decimal"
                                          FloatLabelType="FloatLabelType.Auto"
                                          @bind-Value="@payment.PaidAmount" />
                    </Column>
                    <Column Classes="col.auto">
                        <Button Size="Blazor.AdminLte.ButtonSize.Small" Color="Color.Warning"
                                @onclick="@AddPayment">
                            Add Payment
                        </Button>
                    </Column>
                    <Column Classes="col.md" />
                    <Column Classes="col.md" />
                </Row>
                <Row>
                    @if (payment.PayMode != PayMode.Cash && payment.PayMode != PayMode.Card)
                    {
                        <Column Classes="col.md">
                            <SfTextBox Placeholder="Refenece No" FloatLabelType="FloatLabelType.Auto" />
                        </Column>
                        <Column Classes="col.md" />
                        <Column Classes="col.md" />
                    }
                    else if (payment.PayMode == PayMode.Card)
                    {
                        <Column Classes="col.auto">
                            <div class="mb-3 row">
                                <label for="sm" class="col-sm-4 col-form-label">Card Type</label>
                                <div class="col-sm-6">
                                    <SfComboBox TValue="CARDType" TItem="string" Placeholder="PayMode"
                                                Autofill="true"
                                                @bind-Value="@cardPayment.CardType" PopupHeight="230px"
                                                DataSource="@cardTypes">
                                        <ComboBoxFieldSettings Text="Value" Value="ID" />
                                    </SfComboBox>
                                </div>
                            </div>
                        </Column>
                        <Column Classes="col.auto">
                            <div class="mb-3 row">
                                <label for="sm" class="col-sm-4 col-form-label">Card</label>
                                <div class="col-sm-6">
                                    <SfComboBox TValue="CARD" TItem="string" Placeholder="Card"
                                                Autofill="true"
                                                @bind-Value="@cardPayment.Card" PopupHeight="230px"
                                                DataSource="@cards">
                                        <ComboBoxFieldSettings Text="Value" Value="ID" />
                                    </SfComboBox>
                                </div>
                            </div>
                        </Column>
                        <Column Classes="col.sm"><SfNumericTextBox TValue="int" Label="Card Last 4 Digit" @bind-Value="cardPayment.CardLastDigit" Placeholder="Card Four Digit" /> </Column>
                        <Column Classes="col.sm"><SfNumericTextBox TValue="int" Label="Auth Code" @bind-Value="cardPayment.AuthCode" Placeholder="Auth Code" /> </Column>
                        <Column Classes="col.sm"><SfNumericTextBox TValue="decimal" Label="Amount" @bind-Value="cardPayment.PaidAmount" Placeholder="Amount" /> </Column>
                        <Column Classes="col.sm.auto">
                            <div class="mb-3 row">
                                <label for="sm" class="col-sm-4 col-form-label">POS</label>
                                <div class="col-sm-6">
                                    <SfComboBox TValue="string" TItem="SelectOption" Placeholder="POS"
                                                Autofill="true"
                                                @bind-Value="@cardPayment.EDCTerminalId" PopupHeight="230px"
                                                DataSource="@EDCList">
                                        <ComboBoxFieldSettings Text="Value" Value="ID" />
                                    </SfComboBox>
                                </div>
                            </div>
                        </Column>
                    }
                </Row>
                <Row>
                    <Column Classes="col.auto">
                        @if (payments != null && payments.Count > 0)
                        {
                            <Row>
                                @foreach (var item in payments)
                                {
                                    <Column Classes="col.sm.auto">
                                        @item.PayMode
                                    </Column>
                                    <Column Classes="col.sm.auto">
                                        @item.PaidAmount.ToString("0.##");
                                    </Column>
                                }
                            </Row>
                        }
                    </Column>
                </Row>
            </Body>
            <Footer>
                <Row>
                    <Column Classes="col.sm._2">
                        <Button Size="Blazor.AdminLte.ButtonSize.Small" Color="Color.Warning"
                                @onclick="BackButton">
                            Back
                        </Button>
                    </Column>
                    <Column Classes="col.md._3">
                        <ASubmitButton Title="Save" />
                    </Column>
                </Row>
                <Row>
                    <DataAnnotationsValidator />
                </Row><Row>
                    <ValidationSummary />
                </Row>
            </Footer>
        </Card>
    </EditForm>
</ContentMain>

<SfDialog Height="200px%" Width="200px" IsModal=true ShowCloseIcon="true" @bind-Visible="Visibility">
    <DialogTemplates>
        <Content>
            <div class="dialogContent">
                <label class="text-danger-emphasis"> Discount:</label>
                <SfTextBox ID="inVal" @bind-Value="@TextBoxValue" @ref="TextboxObj"
                           Type="InputType.Text"
                           Placeholder="Percentage/Amount!" />
                <button @onclick="@AddButtonClicked" class="e-control e-btn e-primary" data-ripple="true">Add</button>
            </div>
        </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton Content="Close" IsPrimary="true" OnClick="@OnBtnCloseclicked" />
    </DialogButtons>
    <DialogEvents Closed="@DialogClose"></DialogEvents>
    <DialogPositionData X="center" Y="center"></DialogPositionData>
</SfDialog>

@code {

    [Parameter] public string ID { get; set; }
    [Parameter] public bool IsEdit { get; set; }
    [Parameter] public bool Returns { get; set; } = false;
    [Parameter] public string Params { get; set; } = "Regular";


    public void ToolbarClickHandler(Syncfusion.Blazor.Navigations.ClickEventArgs args)
    {

        if (args.Item.Id == "Click")
        {
            //You can customize your code here.
            Helper.Msg("Clcik", args.Item.Text);
        }
        if (args.OriginalEvent.Button.ToString() == "Delete")
        {

        }
        {

        }
    }




    private void BackButton() => NavigationManager.NavigateTo(ReturnUrl);

    //SF Dailog

    bool Visibility = false;
    private bool ShowButton { get; set; } = false;
    SfTextBox TextboxObj;
    private string TextBoxValue;
    private void AddDiscount()
    {
        //Show pop window to ask amount in per/ or rs
        this.Visibility = true;
    }
    private void DialogOpen(Object args)
    {
        TextBoxValue = "0";
    }
    private void DialogClose(Object args)
    {

        TextBoxValue = "0";
    }
    private void OnBtnclicked()
    {
        this.Visibility = true;
    }
    private void OnBtnCloseclicked()
    {
        this.Visibility = false;
    }
    private void AddButtonClicked()
    {

        if (this.TextboxObj.Value != "")
        {
            try
            {
                if (TextBoxValue.Contains("%"))
                {
                    Item.Discount = decimal.Parse(TextBoxValue.Replace("%", "").Trim());
                    Item.Discount = (Item.Rate * Item.Qty) * (Item.Discount / 100);
                }
                else
                {
                    Item.Discount = decimal.Parse(TextBoxValue.Trim());

                }

                Item.Amount = Item.Qty * Item.Rate - Item.Discount;
                TextboxObj.Value = "";
                StateHasChanged();
                Visibility = false;
            }
            catch (Exception)
            {
                Helper.Msg("Error", "Enter only numeric and % ", true);
                TextboxObj.Value = "";
            }

        }
    }

    private async Task PrintInvoice(string invNumber)
    {

        if (string.IsNullOrEmpty(invNumber) == false)
        {
            //"/Sales/InvoicePrinting/View/{Reprint:bool}/{smallPage:bool}/{Copy:int}/{param:string}"
            // Navigation.NavigateTo($"/Sales/InvoicePrinting/View/{false}/{false}/{2}/{invNumber}");

            PrintingService.Print($"api/productsales/invoiceprint?id={invNumber}&copy={2}&pagesmall={false}&reprint={false}");

        }
    }


    private async void Save()
    {
        if (!disable && PrepareToSave())
        {

            var flag = await Helper.SaveAsync<SaleInvoiceVM>($"{ApiUrl}/SaveInvoice", invoiceVM, "ProductSale", InvoiceNumber, IsEdit);
            if (flag && !IsEdit)
            {

                disable = true;
                //  EntityModel = entity;
                StateHasChanged();
                PrintInvoice(invoiceVM.Invoice.InvoiceNo);

            }

        }
    }

    private async Task SearchCustomerAsync()
    {

        if (string.IsNullOrEmpty(mobileno) == false)
        {

            try
            {
                custname = await HttpC.GetStringAsync($"api/Customers/bymobile?mobile={mobileno}");
                if (string.IsNullOrEmpty(custname))
                    Helper.Msg("Error", "Mobile No not found!", true);
                StateHasChanged();
            }
            catch (Exception exception)
            {
                Helper.Msg("Error", "Failed to get customer", true);
            }
        }
        else if (string.IsNullOrEmpty(custname) == false)
        {

            var cust = await Helper.GetRecordAsSDAsync($"api/Customers/byName?name={custname.ToLower()}");

            if (cust.Count > 1)
            {
                //TODO: Handle this using List Dailog and Select. and remove below line!
                mobileno = cust.First().Key;
                custname = cust.First().Value;
                StateHasChanged();
            }
            else if (cust.Count == 1)
            {
                mobileno = cust.First().Key;
                custname = cust.First().Value;
                StateHasChanged();
            }
            else
            {
                Helper.Msg("Error", $"Customer with Name {custname} not found!", true);
            }
        }
        else
        {
            Helper.Msg("Error", "Enter Name of Mobile number to search!", true);
        }

    }



}

