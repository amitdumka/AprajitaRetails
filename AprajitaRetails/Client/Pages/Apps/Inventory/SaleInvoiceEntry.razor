@page "/sales/{Returns:bool}/{params}/edit/{IsEdit:bool}/{*Id}"
@page "/sales/{Returns:bool}/{params}/edit/{IsEdit:bool}"


@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Calendars
@using AprajitaRetails.Helpers
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Navigations
@using AprajitaRetails.Aks
@using AprajitaRetails.Aks.Forms
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Popups
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using AprajitaRetails.Shared.Models.Stores
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using AprajitaRetails.AdminLte.Forms
@using Radzen.Blazor
@using AprajitaRetails.Shared.ViewModels
@using AprajitaRetails.Commons
@using AprajitaRetails.Shared.Models.Inventory
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Calendars
@using AprajitaRetails.Helpers
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Navigations
@using AprajitaRetails.Aks
@using AprajitaRetails.Aks.Forms
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Popups

@inject NavigationManager NavigationManager
@attribute [Authorize]
@inject ClientSetting Setting
@inject DataHelper Helper

<ContentHeader>
    <Header>
        <Blazor.AdminLte.PageTitle Title=@Title />
    </Header>
</ContentHeader>

<ContentMain>
    <EditForm Model=@entity OnValidSubmit=@Save OnInvalidSubmit=@Helper.ErrorMsg>

        <Card ToolOptions="new CardToolOptions { Collapsable = true, Maximizable=true}">
            <Title><CardTitle>@Title</CardTitle></Title>
            <Header><CardTools /></Header>
            <Body>
                <Row>
                    <Column Classes="col.md">
                        <div class="mb-3 row">
                            <label for="Store" class="col-sm-4 col-form-label">Store</label>
                            <div class="col-sm-6">
                                <SfComboBox TValue="string" TItem="SelectOption" Placeholder="Store"
                                            Autofill="true"
                                            @bind-Value="@entity.StoreId" PopupHeight="230px"
                                            DataSource="@Stores">
                                    <ComboBoxFieldSettings Text="Value" Value="ID" />
                                </SfComboBox>
                            </div>
                        </div>
                    </Column>
                    <Column Classes="col.md">
                        <div class="mb-3 row">
                            <label for="ondate" class="col-sm-4 col-form-label">Date</label>
                            <div class="col-sm-6">
                                <SfDatePicker @bind-Value="@entity.OnDate" Format="dd-MM-yyyy" TValue="DateTime" Placeholder="Choose a Date" ShowClearButton="true"></SfDatePicker>
                            </div>
                        </div>
                    </Column>
                    <Column Classes="col.md">
                        <div class="mb-3 row">
                            <label for="inv" class="col-sm-4 col-form-label">Invoice Type</label>
                            <div class="col-sm-6">
                                <SfComboBox TValue="InvoiceType" TItem="string" Placeholder="Invoice Type"
                                            Autofill="true"
                                            @bind-Value="@entity.InvoiceType" PopupHeight="230px"
                                            DataSource="@invTypes">
                                    <ComboBoxFieldSettings Text="Value" Value="ID" />
                                </SfComboBox>
                            </div>
                        </div>
                    </Column>
                </Row>
                <Row>
                    @if (IsEdit)
                    {
                        <Column Classes="col.md"><ATextInput disabled @bind-Value=@entity.InvoiceNo Name="Invno" Label="Invoice No" /></Column>
                    }
                    <Column Classes="col.md">
                        <ACheckBox Title="Adjustment" Name="d5" @bind-Checked="@entity.Adjusted" />
                    </Column>

                    <Column Classes="col.md">
                        <div class="mb-3 row">
                            <label for="sm" class="col-sm-4 col-form-label">Sale's man</label>
                            <div class="col-sm-6">
                                <SfComboBox TValue="string" TItem="SelectOption" Placeholder="sm"
                                            Autofill="true"
                                            @bind-Value="@entity.SalesmanId" PopupHeight="230px"
                                            DataSource="@Salesmen">
                                    <ComboBoxFieldSettings Text="Value" Value="ID" />
                                </SfComboBox>
                            </div>
                        </div>
                    </Column>
                </Row>
                <Row>
                    @*<Column Classes="col.md"><AInputNumber  @bind-Value=@entity.TotalQty Name="MRPAmount" Label="MRP" /></Column>*@
                    <Column Classes="col.md"><AInputNumber @bind-Value=@entity.FreeQty Name="qq" Label="Free Qty" /></Column>
                    <Column Classes="col.md"><AInputNumber @bind-Value=@entity.BilledQty Name="NAmount" Label="Billed Qty" /></Column>
                </Row>
                <Row>
                    <Column Classes="col.md"><AInputNumber @bind-Value=@entity.TotalMRP Name="MRPAmount" Label="MRP" /></Column>
                    <Column Classes="col.md"><AInputNumber @bind-Value=@entity.TotalDiscountAmount Name="qq" Label="Discount Amount" /></Column>
                    <Column Classes="col.md"><AInputNumber @bind-Value=@entity.TotalPrice Name="qq" Label="Bill Amount" /></Column>
                </Row>
                <Row>
                    <Column Classes="col.md"><AInputNumber @bind-Value=@entity.TotalBasicAmount Name="NAmount" Label="Basic Amount" /></Column>
                    <Column Classes="col.md"><AInputNumber @bind-Value=@entity.TotalTaxAmount Name="MRPAmount" Label="Tax" /></Column>
                    <Column Classes="col.md"><AInputNumber @bind-Value=@entity.RoundOff Name="NAmount" Label="Round Off" /></Column>
                </Row>
                <div class="row  text-center row-cols-5 justify-content-start ">
                    <Column Classes="col.sm">

                        <label class="small">Barcode</label>
                    </Column>
                    <Column Classes="col.sm"> <label class="small">Qty</label></Column>
                    <Column Classes="col.sm"> <label class="small">Rate</label></Column>
                    <Column Classes="col.sm"> <label class="small">Discount</label></Column>
                    <Column Classes="col.sm"> <label class="small">Amount</label> </Column>
                    <Column Classes="col.sm"> </Column>
                </div>
                <div class="row  text-center row-cols-5 justify-content-start mb-3">
                    <Column Classes="col.sm">
                        @*<ABTextInput Label="Barcode" @bind-Value="Item.Barcode" Placeholder="Barcode" />*@
                        <SfTextBox ValueChange="@OnBarcodeChange" @bind-Value="@Item.Barcode" Placeholder='Barcode'></SfTextBox>
                    </Column>
                    <Column Classes="col.sm"><SfNumericTextBox OnChange="@OnChange" @onkeypress='@(e => KeyPressed(e))' TValue="decimal" Label="Qty" @bind-Value="Item.Qty" Placeholder="Qty" /> </Column>
                    <Column Classes="col.sm"><SfNumericTextBox OnChange="@OnChange" @onkeypress='@(e => KeyPressed(e))' TValue="decimal" Label="Rate" @bind-Value="Item.Rate" Placeholder="Rate" /> </Column>
                    <Column Classes="col.sm"><SfNumericTextBox OnChange="@OnChange" @onkeypress='@(e => KeyPressed(e))' TValue="decimal" Label="Discount" @bind-Value="Item.Discount" Placeholder="Discount" Readonly="true" /> </Column>
                    <Column Classes="col.sm"><SfNumericTextBox @onkeypress='@(e => KeyPressed(e))' TValue="decimal" Label="Amount" @bind-Value="Item.Amount" Placeholder="Amount" /> </Column>
                    @*<Column Classes="col.sm"><SfButton  OnClick="AddItem" CssClass="e-round e-small e-success	" IconCss="e-icons e-plus-icon" IsPrimary="false"></SfButton></Column>*@

                    <Column>
                        <button type="button" @onclick="@AddDiscount" class="btn btn-info btn-circle btn-sm">
                            <i class="fas fa-percent"></i>
                        </button>
                        <button type="button" @onclick="@AddItem" class="btn btn-success btn-circle btn-sm">
                            <i class="fas fa-add"></i>
                        </button>

                    </Column>
                </div>
                <Row>
                    <SfGrid TValue="SItem" DataSource="@SaleItemList" AllowTextWrap=true AllowResizing="true"
                            AllowPaging="true" ID="Grid" @ref="Grid" Columns="@Columns">
                        <GridPageSettings PageSize="4"></GridPageSettings>
                        <GridTemplates>
                            <EmptyRecordTemplate Context="newname">
                                <span>Product Item : No SKU has been added!  </span>
                            </EmptyRecordTemplate>
                        </GridTemplates>
                        @* <GridEvents OnToolbarClick="ToolbarClick" TValue="SItem"></GridEvents>*@
                        <EntityAggregator>
                            <EntityAggSumFooter Title="Total Amount" Field="@nameof(SItem.Amount)"></EntityAggSumFooter>
                            <EntityAggSumFooter Format="f" Title="Total Qty" Field="@nameof(SItem.Qty)"></EntityAggSumFooter>
                        </EntityAggregator>

                    </SfGrid>
                </Row>
                <Row>
                    <Column Classes="col.md">
                        <div class="mb-3 row">
                            <label for="sm" class="col-sm-4 col-form-label">Payment</label>
                            <div class="col-sm-6">
                                <SfComboBox TValue="PayMode" TItem="string" Placeholder="PayMode"
                                            Autofill="true"
                                            @bind-Value="@payment.PayMode" PopupHeight="230px"
                                            DataSource="@payModes">
                                    <ComboBoxFieldSettings Text="Value" Value="ID" />
                                </SfComboBox>
                            </div>
                        </div>
                    </Column>
                    <Column Classes="col.md" />
                    <Column Classes="col.md" /><Column Classes="col.md" /><Column Classes="col.md" />
                </Row>
                <Row>
                    @if (payment.PayMode != PayMode.Cash && payment.PayMode != PayMode.Card)
                    {
                        <Column Classes="col.md">
                            <SfTextBox Placeholder="Refenece No" FloatLabelType="FloatLabelType.Always" />
                        </Column>
                    }
                    else if (payment.PayMode == PayMode.Card)
                    {
                        <Column Classes="col.md">
                            <div class="mb-3 row">
                                <label for="sm" class="col-sm-4 col-form-label">Card Type</label>
                                <div class="col-sm-6">
                                    <SfComboBox TValue="CARDType" TItem="string" Placeholder="PayMode"
                                                Autofill="true"
                                                @bind-Value="@cardPayment.CardType" PopupHeight="230px"
                                                DataSource="@cardTypes">
                                        <ComboBoxFieldSettings Text="Value" Value="ID" />
                                    </SfComboBox>
                                </div>
                            </div>
                        </Column>
                        <Column Classes="col.md">
                            <div class="mb-3 row">
                                <label for="sm" class="col-sm-4 col-form-label">Card</label>
                                <div class="col-sm-6">
                                    <SfComboBox TValue="CARD" TItem="string" Placeholder="Card"
                                                Autofill="true"
                                                @bind-Value="@cardPayment.Card" PopupHeight="230px"
                                                DataSource="@cards">
                                        <ComboBoxFieldSettings Text="Value" Value="ID" />
                                    </SfComboBox>
                                </div>
                            </div>
                        </Column>
                        <Column Classes="col.sm"><SfNumericTextBox TValue="int" Label="Card Last 4 Digit" @bind-Value="cardPayment.CardLastDigit" Placeholder="Card Four Digit" /> </Column>
                        <Column Classes="col.sm"><SfNumericTextBox TValue="int" Label="Auth Code" @bind-Value="cardPayment.AuthCode" Placeholder="Auth Code" /> </Column>
                        <Column Classes="col.sm"><SfNumericTextBox TValue="decimal" Label="Amount" @bind-Value="cardPayment.PaidAmount" Placeholder="Amount" /> </Column>
                        <Column Classes="col.md">
                            <div class="mb-3 row">
                                <label for="sm" class="col-sm-4 col-form-label">POS</label>
                                <div class="col-sm-6">
                                    <SfComboBox TValue="PayMode" TItem="string" Placeholder="POS"
                                                Autofill="true"
                                                @bind-Value="@payment.PayMode" PopupHeight="230px"
                                                DataSource="@payModes">
                                        <ComboBoxFieldSettings Text="Value" Value="ID" />
                                    </SfComboBox>
                                </div>
                            </div>
                        </Column>
                    }
                </Row>

            </Body>
            <Footer>
                <Row>
                    <Column Classes="col.sm._2">
                        <Button Size="Blazor.AdminLte.ButtonSize.Small" Color="Color.Warning"
                                @onclick="BackButton">
                            Back
                        </Button>
                    </Column>
                    <Column Classes="col.md._3">
                        <ASubmitButton Title="Save" />
                    </Column>
                </Row>
                <Row>
                    <DataAnnotationsValidator />
                </Row><Row>
                    <ValidationSummary />
                </Row>
            </Footer>
        </Card>
    </EditForm>
</ContentMain>

<SfDialog Height="200px%" Width="200px" IsModal=true ShowCloseIcon="true" @bind-Visible="Visibility">
    <DialogTemplates>
        <Content>
            <div class="dialogContent">
                <label class="text-danger-emphasis"> Discount:</label>
                <SfTextBox ID="inVal" @bind-Value="@TextBoxValue" @ref="TextboxObj"
                           Type="InputType.Text"
                           Placeholder="Percentage/Amount!" />
                <button @onclick="@AddButtonClicked" class="e-control e-btn e-primary" data-ripple="true">Add</button>
            </div>
        </Content>
    </DialogTemplates>
    <DialogButtons>
        <DialogButton Content="Close" IsPrimary="true" OnClick="@OnBtnCloseclicked" />
    </DialogButtons>
    <DialogEvents Closed="@DialogClose"></DialogEvents>
    <DialogPositionData X="center" Y="center"></DialogPositionData>
</SfDialog>

@code {

    [Parameter] public string ID { get; set; }
    [Parameter] public bool IsEdit { get; set; }
    [Parameter] public bool Returns { get; set; } = false;
    [Parameter] public string Params { get; set; } = "Regular";

    private bool disable = false;

    private string Title = "Sale Invoice ";
    private string ReturnUrl = "/sales/false/Regular";

    private ProductSale? entity = new ProductSale { OnDate = DateTime.Now };
    private SalePaymentDetail payment = new SalePaymentDetail { PayMode = PayMode.Cash };
    private CardPaymentDetail cardPayment = new CardPaymentDetail { PaidAmount = 0 };
    private List<SaleItem>? saleItems = new List<SaleItem>();

    private IList<string> payModes = Enum.GetNames(typeof(PayMode));
    private IList<string> invTypes = Enum.GetNames(typeof(InvoiceType));
    private IList<string> cards = Enum.GetNames(typeof(CARD));
    private IList<string> cardTypes = Enum.GetNames(typeof(CARDType));
    private IList<SelectOption>? Stores;
    private IList<SelectOption>? Salesmen;
    private IList<SelectOption>? EDCList;

     private void BackButton() => NavigationManager.NavigateTo(ReturnUrl);
    private string ApiUrl = "api/productSales";
    private SItem Item = new SItem { Barcode = "", Amount = 0, Discount = 0, Qty = 0, Rate = 0, TaxAmount = 0, TaxRate = 0, Unit = Unit.Meters };

    private List<object> toolbar = new List<object>() { new ItemModel() { Text = "Add", TooltipText = "Add", PrefixIcon = "e-icons e-collapse", Id = "New" }, new ItemModel() { Text = "Delete", TooltipText = "Delete", PrefixIcon = "e-icons e-collapse", Id = "Delete" } };
    private List<GridColumn> Columns { get; set; }

    private SfGrid<SItem>? Grid;
    private List<SItem> SaleItemList = new List<SItem>();

    //Base Info
    private string InvoiceNumber = "";

    private InvoiceType invType = InvoiceType.Sales;
    private TaxType taxType = TaxType.GST;

    bool Visibility = false;
    private bool ShowButton { get; set; } = false;
    SfTextBox TextboxObj;
    private string TextBoxValue;

    private void DialogOpen(Object args)
    {
        TextBoxValue = "0";
    }
    private void DialogClose(Object args)
    {

        TextBoxValue = "0";
    }
    private void OnBtnclicked()
    {
        this.Visibility = true;
    }
    private void OnBtnCloseclicked()
    {
        this.Visibility = false;
    }
    private void AddButtonClicked()
    {

        if (this.TextboxObj.Value != "")
        {
            try
            {
                if (TextBoxValue.Contains("%"))
                {
                    Item.Discount = decimal.Parse(TextBoxValue.Replace("%", "").Trim());
                    Item.Discount = (Item.Rate * Item.Qty) * (Item.Discount / 100);
                }
                else
                {
                    Item.Discount = decimal.Parse(TextBoxValue.Trim());

                }

                Item.Amount = Item.Qty * Item.Rate - Item.Discount;
                TextboxObj.Value = "";
                StateHasChanged();
                Visibility = false;
            }
            catch (Exception)
            {
                Helper.Msg("Error", "Enter only numeric and % ", true);
                TextboxObj.Value = "";
            }

        }
    }



    private async void Save()
    {
        if (!disable)
        {

            var flag = await Helper.SaveAsync<ProductSale>(ApiUrl, entity, "ProductSale", InvoiceNumber, IsEdit);
            if (flag && !IsEdit)
            {
                disable = true;
                //  EntityModel = entity;
                StateHasChanged();
            }

        }
    }



}

