@page "/inventory/printInvoices"

@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Popups
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Calendars
@using AprajitaRetails.Helpers
@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Navigations
@using AprajitaRetails.Commons

@using AprajitaRetails.Helpers
@using AprajitaRetails.Aks
@using AprajitaRetails.Aks.Forms
@using System;
@using System.Globalization;
@using System.Reflection;
@using AprajitaRetails.Shared.AutoMapper.DTO;
@using AprajitaRetails.Shared.Models.Inventory;
@using AprajitaRetails.Shared.ViewModels;
@using Syncfusion.Blazor.Grids;
@using Syncfusion.Blazor.Grids.Internal;
@using Syncfusion.Blazor.Inputs;
@using Syncfusion.Blazor.Navigations;
@using AprajitaRetails.Shared.Models.Stores
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using AprajitaRetails.AdminLte.Forms
@using Radzen.Blazor
@using AprajitaRetails.Commons
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Calendars
@using AprajitaRetails.Helpers
@using AprajitaRetails.Aks
@using AprajitaRetails.Aks.Forms
@using Syncfusion.Blazor.Popups
@using Append.Blazor.Printing

@inject IPrintingService PrintingService

@inject NavigationManager Navigation
@inject DataHelper Helper
@attribute [Authorize]
@inject ClientSetting Setting
<ContentHeader>
    <Header>
        <Blazor.AdminLte.PageTitle Title="Invoice Printing" />
    </Header>
</ContentHeader>
<ContentMain>
    <Row>
        <Column Classes="col.md">
            <div class="mb-3 row">
                <label for="inv" class="col-sm-4 col-form-label">Year</label>
                <div class="col-sm-6">
                    <SfComboBox TValue="int" TItem="int" Placeholder="Year"
                                Autofill="true"
                                @bind-Value="@year" PopupHeight="230px"
                                DataSource="@YearList">
                        <ComboBoxFieldSettings Text="Value" Value="ID" />
                    </SfComboBox>
                </div>
            </div>
        </Column>

        <Column Classes="col.md">
            <div class="mb-3 row">
                <label for="inv" class="col-sm-4 col-form-label">Month</label>
                <div class="col-sm-6">
                    <SfComboBox TValue="int" TItem="int" Placeholder="Month"
                                Autofill="true"
                                @bind-Value="@month" PopupHeight="230px"
                                DataSource="@MonthList">
                        <ComboBoxFieldSettings Text="Value" Value="ID" />
                    </SfComboBox>
                </div>
            </div>
        </Column>
        <Column Classes="col.md">

            <SfButton CssClass="e-primary e-small" OnClick="FetchInvList">Get Invoice List</SfButton>
        </Column>
    </Row>
    <Row>
        <Column Classes="col.md">
            <div class="mb-3 row">
                <label for="inv" class="col-sm-4 col-form-label">Invoice</label>
                <div class="col-sm-6">
                    <SfComboBox TValue="string" TItem="string" Placeholder="Invoice  "
                                Autofill="true" AllowFiltering="true"
                                @bind-Value="@invoiceNumber" PopupHeight="230px"
                                DataSource="@InvoiceList">
                        <ComboBoxFieldSettings Text="Value" Value="ID" />
                    </SfComboBox>
                </div>
            </div>
        </Column>
        <Column Classes="col.md">
            <AprajitaRetails.AdminLte.Forms.ANumInput @bind-Value="@copy" Label="Copy" Name="Copy" />
        </Column>

        <Column Classes="col.md">
            <SfButton CssClass="e-warning e-small" @onclick='@(()=> PrintingService.Print($"api/productsales/invoiceprint?id={invoiceNumber}&copy={copy}&pagesmall={smallPage}&reprint={Reprint}"))'>Print Invoice</SfButton>

        </Column>

    </Row>
</ContentMain>

@code {

    IList<SelectOption>? Stores;
    IList<int>? YearList;
    IList<int>? MonthList = new List<int> { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 };// "July", "Aug", "Sept", "Oct", "Nov","Dec" };

    private List<string> InvoiceList;
    private int year = DateTime.Today.Year, month = DateTime.Today.Month;

    private bool Reprint = true;
    private int copy = 1;
    private string invoiceNumber = "";
    private bool smallPage = false;

    void PrintInvoice(MouseEventArgs args)
    {
        if (string.IsNullOrEmpty(invoiceNumber) == false)
        {
            //"/Sales/InvoicePrinting/View/{Reprint:bool}/{smallPage:bool}/{Copy:int}/{param:string}"
            Navigation.NavigateTo($"/Sales/InvoicePrinting/View/{Reprint}/{smallPage}/{copy}/{invoiceNumber}");
        }
    }

    private async void FetchInvList(MouseEventArgs args)
    {
        if (InvoiceList != null)
            InvoiceList.Clear();

        InvoiceList = await Helper.FetchAsync<string>($"api/productsales/invlist?StoreId={Setting.StoreCode}", $"&year={year}&month={month}");

        if (InvoiceList != null && InvoiceList.Count > 0)
        {
            StateHasChanged();
        }
        else
        {
            Helper.Msg("Error", "Not Found", true);
        }
    }
    protected override async Task OnInitializedAsync()
    {

        try
        {
            Stores = await Helper.FetchOptionsAsync("api/Stores", "");
            YearList = await Helper.FetchAsync<int>("api/ProductSales/YearList", $"?StoreId={Setting.StoreCode}");
            //Year = DateTime.Today.Year;
            year = DateTime.Today.Year;
            month = DateTime.Today.Month;
            InvoiceList = await Helper.FetchAsync<string>($"api/productsales/invlist?StoreId={Setting.StoreCode}", $"&year={year}&month={month}");
            StateHasChanged();
        }
        catch (Exception ex)
        {
            Helper.Msg("Error", ex.Message, true);
        }

    }

}